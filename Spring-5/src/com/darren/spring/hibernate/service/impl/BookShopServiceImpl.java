package com.darren.spring.hibernate.service.impl;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.darren.spring.hibernate.dao.BookShopDao;
import com.darren.spring.hibernate.service.BookShopService;

@Service("bookShopService")
public class BookShopServiceImpl implements BookShopService {

	@Autowired
	private BookShopDao bookShopDao;

	/**
	 * Spring hibernate事务的流程
	 * 1. 在方法开始之前
	 * 	a). 获取Session
	 *  b). 把Session和当前线程绑定，这样就可以在Dao中使用SessionFactory的getCurrentSession方法来获取Session了
	 *  c). 开启事务
	 * 2. 若方法正常结束，即没有出现异常，则
	 *  a). 提交事务
	 *  b). 使和当前线程绑定的Session解除绑定
	 *  c). 关闭Session
	 * 
	 * 3. 若方法出现异常，则
	 *  a). 回滚事务
	 *  b). 使和当前线程绑定的Session解除绑定
	 *  c). 关闭Session
	 */
	@Override
	public void purchase(String username, String isbn) {
		int price = bookShopDao.findBookPriceByIsbn(isbn);

		bookShopDao.updateBookStock(isbn);

		bookShopDao.updateUserAccount(username, price);
	}

}
